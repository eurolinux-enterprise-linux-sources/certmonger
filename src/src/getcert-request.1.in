.TH certmonger 1 "9 February 2015" "certmonger Manual"

.SH NAME
getcert

.SH SYNOPSIS
getcert request [options]

.SH DESCRIPTION
Tells \fIcertmonger\fR to use an existing key pair (or to generate one
if one is not already found in the specified location), to generate a
signing request using the key pair, and to submit them for signing to a
CA.

.SH KEY AND CERTIFICATE STORAGE OPTIONS
.TP
\fB\-d\fR DIR
Use an NSS database in the specified directory for storing this
certificate and key.
.TP
\fB\-n\fR NAME
Use the key with this nickname to generate the signing request.  If no
such key is found, generate one.  Give the enrolled certificate this
nickname, too.
Only valid with \fB\-d\fR.
.TP
\fB\-t\fR TOKEN
If the NSS database has more than one token available, use the token
with this name for storing and accessing the certificate and key.  This
argument only rarely needs to be specified.
Only valid with \fB\-d\fR.
.TP
\fB\-f\fR FILE
Store the issued certificate in this file.  For safety's sake, do not
use the same file specified with the \fB\-k\fR option.
.TP
\fB\-k\fR FILE
Use the key stored in this file to generate the signing request.  If no
such file is found, generate a new key pair and store them in the file.
Only valid with \fB\-f\fR.

.SH KEY ENCRYPTION OPTIONS
.TP
\fB\-p\fR FILE
Encrypt private key files or databases using the PIN stored in the named
file as the passphrase.
.TP
\fB\-P\fR PIN
Encrypt private key files or databases using the specified PIN as the
passphrase.  Because command-line arguments to running processes are
trivially discoverable, use of this option is not recommended except
for testing.

.SH KEY GENERATION OPTIONS
.TP
\fB\-G\fR TYPE
In case a new key pair needs to be generated, this option specifies the
type of the keys to be generated.  If not specified, a reasonable default
(currently \fIRSA\fR) will be used.
.TP
\fB\-g\fR BITS
In case a new key pair needs to be generated, this option specifies the
size of the key.  If not specified, a reasonable default (currently
@CM_DEFAULT_PUBKEY_SIZE@ bits) will be used.

.SH TRACKING OPTIONS
.TP
\fB\-r\fR
Attempt to obtain a new certificate from the CA when the expiration date of a
certificate nears.  This is the default setting.
.TP
\fB\-R\fR
Don't attempt to obtain a new certificate from the CA when the expiration date
of a certificate nears.  If this option is specified, an expired certificate
will simply stay expired.
.TP
\fB\-I\fR NAME
Assign the specified nickname to this task.  If this option is not specified,
a name will be assigned automatically.

.SH ENROLLMENT OPTIONS
.TP
\fB\-c\fR NAME
Enroll with the specified CA rather than a possible default.  The name of
the CA should correspond to one listed by \fIgetcert list-cas\fR.
.TP
\fB\-T\fR NAME
Request a certificate using the named profile, template, or certtype,
from the specified CA.

.SH SIGNING REQUEST OPTIONS

If none of \fB\-N\fR, \fB\-U\fR, \fB\-K\fR, \fB\-E\fR, and \fB\-D\fR are
specified, a default group of settings will be used to request an SSL
server certificate for the current host, with the \fIhost\fR Kerberos
service as an additional name.

.TP
\fB\-N\fR NAME
Set the subject name to include in the signing request.  The default
used is CN=\fIhostname\fR, where \fIhostname\fR is the local hostname.
.TP
\fB\-u\fR keyUsage
Add an extensionRequest for the specified keyUsage to the
signing request.  The keyUsage value is expected to be one of these names:

digitalSignature

nonRepudiation

keyEncipherment

dataEncipherment

keyAgreement

keyCertSign

cRLSign

encipherOnly

decipherOnly
.TP
\fB\-U\fR EKU
Add an extensionRequest for the specified extendedKeyUsage to the
signing request.  The EKU value is expected to be an object identifier
(OID), but some specific names are also recognized.  These are some
names and their associated OID values:

id-kp-serverAuth 1.3.6.1.5.5.7.3.1

id-kp-clientAuth 1.3.6.1.5.5.7.3.2

id-kp-codeSigning 1.3.6.1.5.5.7.3.3

id-kp-emailProtection 1.3.6.1.5.5.7.3.4

id-kp-timeStamping 1.3.6.1.5.5.7.3.8

id-kp-OCSPSigning 1.3.6.1.5.5.7.3.9

id-pkinit-KPClientAuth 1.3.6.1.5.2.3.4

id-pkinit-KPKdc 1.3.6.1.5.2.3.5

id-ms-kp-sc-logon 1.3.6.1.4.1.311.20.2.2
.TP
\fB\-K\fR NAME
Add an extensionRequest for a subjectAltName, with the specified Kerberos
principal name as its value, to the signing request.
.TP
\fB\-E\fR EMAIL
Add an extensionRequest for a subjectAltName, with the specified email
address as its value, to the signing request.
.TP
\fB\-D\fR DNSNAME
Add an extensionRequest for a subjectAltName, with the specified DNS name
as its value, to the signing request.
.TP
\fB\-A\fR ADDRESS
Add an extensionRequest for a subjectAltName, with the specified IP address
as its value, to the signing request.
.TP
\fB\-l\fR FILE
Add an optional ChallengePassword value, read from the file, to the signing
request.  A ChallengePassword is often required when the CA is accessed using
SCEP.
.TP
\fB\-L\fR PIN
Add the argument value to the signing request as a ChallengePassword attribute.
A ChallengePassword is often required when the CA is accessed using SCEP.

.SH OTHER OPTIONS
.TP
\fB\-B\fR COMMAND
When ever the certificate or the CA's certificates are saved to the
specified locations, run the specified command as the client user before
saving the certificates.
.TP
\fB\-C\fR COMMAND
When ever the certificate or the CA's certificates are saved to the
specified locations, run the specified command as the client user after
saving the certificates.
.TP
\fB\-a\fR DIR
When ever the certificate is saved to the specified location, if root
certificates for the CA are available, save them to the specified NSS database.
.TP
\fB\-F\fR FILE
When ever the certificate is saved to the specified location, if root
certificates for the CA are available, and when the local copies of the
CA's root certificates are updated, save them to the specified file.
.TP
\fB\-w\fR
Wait for the certificate to be issued and saved, or for the attempt to obtain
one to fail.
.TP
\fB\-v\fR
Be verbose about errors.  Normally, the details of an error received from
the daemon will be suppressed if the client can make a diagnostic suggestion.

.SH NOTES
Locations specified for key and certificate storage need to be
accessible to the \fIcertmonger\fR daemon process.  When run as a system
daemon on a system which uses a mandatory access control mechanism such
as SELinux, the system policy must ensure that the daemon is allowed to
access the locations where certificates and keys that it will manage
will be stored (these locations are typically labeled as \fIcert_t\fR or
an equivalent).  More SELinux-specific information can be found in the
\fIselinux.txt\fR documentation file for this package.

.SH BUGS
Please file tickets for any that you find at https://fedorahosted.org/certmonger/

.SH SEE ALSO
\fBcertmonger\fR(8)
\fBgetcert\fR(1)
\fBgetcert-add-ca\fR(1)
\fBgetcert-add-scep-ca\fR(1)
\fBgetcert-list-cas\fR(1)
\fBgetcert-list\fR(1)
\fBgetcert-modify-ca\fR(1)
\fBgetcert-refresh-ca\fR(1)
\fBgetcert-refresh\fR(1)
\fBgetcert-remove-ca\fR(1)
\fBgetcert-resubmit\fR(1)
\fBgetcert-start-tracking\fR(1)
\fBgetcert-status\fR(1)
\fBgetcert-stop-tracking\fR(1)
\fBcertmonger-certmaster-submit\fR(8)
\fBcertmonger-dogtag-ipa-renew-agent-submit\fR(8)
\fBcertmonger-dogtag-submit\fR(8)
\fBcertmonger-ipa-submit\fR(8)
\fBcertmonger-local-submit\fR(8)
\fBcertmonger-scep-submit\fR(8)
\fBcertmonger_selinux\fR(8)
