[ Begin pass (preserve=1,pin=""). ]
(prep NSS)
key_issued_count=0
key_requested_count=0
(submit NSS)
key_issued_count=0
key_requested_count=1
(prep OpenSSL)
key_issued_count=0
key_requested_count=0
(submit OpenSSL)
key_issued_count=0
key_requested_count=1
First round certificates OK.
NSS keys before re-keygen (preserve=1,pin=""):
<-> rsa      originalhex   NSS Certificate DB:i2048
key_issued_count=0
key_requested_count=1
OK.
NSS keys after re-keygen (preserve=1,pin=""):
<-> rsa      hexhexhexhexhex   i2048 (candidate (next))
<-> rsa      originalhex   NSS Certificate DB:i2048
key_issued_count=0
key_next_requested_count=0
key_requested_count=1
(submit NSS)
key_issued_count=0
key_next_requested_count=1
key_requested_count=1
NSS certs before saving (preserve=1,pin=""):
i2048                                                        u,u,u
serial=1234
NSS keys before saving (preserve=1,pin=""):
<-> rsa      hexhexhexhexhex   i2048 (candidate (next))
<-> rsa      originalhex   NSS Certificate DB:i2048
NSS Signing:
NSS Verify:
This is the plaintext.
(saving)
key_issued_count=1
key_requested_count=1
NSS certs after saving (preserve=1,pin=""):
i2048                                                        u,u,u
serial=1235
NSS keys after saving (preserve=1,pin=""):
<-> rsa      hexhexhexhexhex   NSS Certificate DB:i2048
<-> rsa      originalhex   (orphan)
NSS Signing:
NSS Verify:
This is the plaintext.
PEM keys before re-keygen (preserve=1,pin=""):
${tmpdir}/keyi2048
key_issued_count=0
key_requested_count=1
OK.
PEM keys after re-keygen (preserve=1,pin=""):
${tmpdir}/keyi2048
${tmpdir}/keyi2048.(next).key
key_issued_count=0
key_next_requested_count=0
key_requested_count=1
(submit OpenSSL)
key_issued_count=0
key_next_requested_count=1
key_requested_count=1
PEM certs before saving (preserve=1,pin=""):
${tmpdir}/certi2048
serial=1234
PEM keys before saving (preserve=1,pin=""):
${tmpdir}/keyi2048
${tmpdir}/keyi2048.(next).key
OpenSSL Signing:
OpenSSL Verify:
This is the plaintext.
(saving)
key_issued_count=1
key_requested_count=1
PEM certs after saving (preserve=1,pin=""):
${tmpdir}/certi2048
serial=1235
PEM keys after saving (preserve=1,pin=""):
${tmpdir}/keyi2048
${tmpdir}/keyi2048.1234.key
OpenSSL Signing:
OpenSSL Verify:
This is the plaintext.
[ End pass (preserve=1,pin=""). ]
[ Begin pass (preserve=1,pin="password"). ]
(prep NSS)
key_issued_count=0
key_requested_count=0
(submit NSS)
key_issued_count=0
key_requested_count=1
(prep OpenSSL)
key_issued_count=0
key_requested_count=0
(submit OpenSSL)
key_issued_count=0
key_requested_count=1
First round certificates OK.
NSS keys before re-keygen (preserve=1,pin="password"):
<-> rsa      originalhex   NSS Certificate DB:i2048
key_issued_count=0
key_requested_count=1
OK.
NSS keys after re-keygen (preserve=1,pin="password"):
<-> rsa      hexhexhexhexhex   i2048 (candidate (next))
<-> rsa      originalhex   NSS Certificate DB:i2048
key_issued_count=0
key_next_requested_count=0
key_requested_count=1
(submit NSS)
key_issued_count=0
key_next_requested_count=1
key_requested_count=1
NSS certs before saving (preserve=1,pin="password"):
i2048                                                        u,u,u
serial=1234
NSS keys before saving (preserve=1,pin="password"):
<-> rsa      hexhexhexhexhex   i2048 (candidate (next))
<-> rsa      originalhex   NSS Certificate DB:i2048
NSS Signing:
NSS Verify:
This is the plaintext.
(saving)
key_issued_count=1
key_requested_count=1
NSS certs after saving (preserve=1,pin="password"):
i2048                                                        u,u,u
serial=1235
NSS keys after saving (preserve=1,pin="password"):
<-> rsa      hexhexhexhexhex   NSS Certificate DB:i2048
<-> rsa      originalhex   (orphan)
NSS Signing:
NSS Verify:
This is the plaintext.
PEM keys before re-keygen (preserve=1,pin="password"):
${tmpdir}/keyi2048
key_issued_count=0
key_requested_count=1
OK.
PEM keys after re-keygen (preserve=1,pin="password"):
${tmpdir}/keyi2048
${tmpdir}/keyi2048.(next).key
key_issued_count=0
key_next_requested_count=0
key_requested_count=1
(submit OpenSSL)
key_issued_count=0
key_next_requested_count=1
key_requested_count=1
PEM certs before saving (preserve=1,pin="password"):
${tmpdir}/certi2048
serial=1234
PEM keys before saving (preserve=1,pin="password"):
${tmpdir}/keyi2048
${tmpdir}/keyi2048.(next).key
OpenSSL Signing:
OpenSSL Verify:
This is the plaintext.
(saving)
key_issued_count=1
key_requested_count=1
PEM certs after saving (preserve=1,pin="password"):
${tmpdir}/certi2048
serial=1235
PEM keys after saving (preserve=1,pin="password"):
${tmpdir}/keyi2048
${tmpdir}/keyi2048.1234.key
OpenSSL Signing:
OpenSSL Verify:
This is the plaintext.
[ End pass (preserve=1,pin="password"). ]
[ Begin pass (preserve=0,pin=""). ]
(prep NSS)
key_issued_count=0
key_requested_count=0
(submit NSS)
key_issued_count=0
key_requested_count=1
(prep OpenSSL)
key_issued_count=0
key_requested_count=0
(submit OpenSSL)
key_issued_count=0
key_requested_count=1
First round certificates OK.
NSS keys before re-keygen (preserve=0,pin=""):
<-> rsa      originalhex   NSS Certificate DB:i2048
key_issued_count=0
key_requested_count=1
OK.
NSS keys after re-keygen (preserve=0,pin=""):
<-> rsa      hexhexhexhexhex   i2048 (candidate (next))
<-> rsa      originalhex   NSS Certificate DB:i2048
key_issued_count=0
key_next_requested_count=0
key_requested_count=1
(submit NSS)
key_issued_count=0
key_next_requested_count=1
key_requested_count=1
NSS certs before saving (preserve=0,pin=""):
i2048                                                        u,u,u
serial=1234
NSS keys before saving (preserve=0,pin=""):
<-> rsa      hexhexhexhexhex   i2048 (candidate (next))
<-> rsa      originalhex   NSS Certificate DB:i2048
NSS Signing:
NSS Verify:
This is the plaintext.
(saving)
key_issued_count=1
key_requested_count=1
NSS certs after saving (preserve=0,pin=""):
i2048                                                        u,u,u
serial=1235
NSS keys after saving (preserve=0,pin=""):
<-> rsa      hexhexhexhexhex   NSS Certificate DB:i2048
NSS Signing:
NSS Verify:
This is the plaintext.
PEM keys before re-keygen (preserve=0,pin=""):
${tmpdir}/keyi2048
key_issued_count=0
key_requested_count=1
OK.
PEM keys after re-keygen (preserve=0,pin=""):
${tmpdir}/keyi2048
${tmpdir}/keyi2048.(next).key
key_issued_count=0
key_next_requested_count=0
key_requested_count=1
(submit OpenSSL)
key_issued_count=0
key_next_requested_count=1
key_requested_count=1
PEM certs before saving (preserve=0,pin=""):
${tmpdir}/certi2048
serial=1234
PEM keys before saving (preserve=0,pin=""):
${tmpdir}/keyi2048
${tmpdir}/keyi2048.(next).key
OpenSSL Signing:
OpenSSL Verify:
This is the plaintext.
(saving)
key_issued_count=1
key_requested_count=1
PEM certs after saving (preserve=0,pin=""):
${tmpdir}/certi2048
serial=1235
PEM keys after saving (preserve=0,pin=""):
${tmpdir}/keyi2048
OpenSSL Signing:
OpenSSL Verify:
This is the plaintext.
[ End pass (preserve=0,pin=""). ]
[ Begin pass (preserve=0,pin="password"). ]
(prep NSS)
key_issued_count=0
key_requested_count=0
(submit NSS)
key_issued_count=0
key_requested_count=1
(prep OpenSSL)
key_issued_count=0
key_requested_count=0
(submit OpenSSL)
key_issued_count=0
key_requested_count=1
First round certificates OK.
NSS keys before re-keygen (preserve=0,pin="password"):
<-> rsa      originalhex   NSS Certificate DB:i2048
key_issued_count=0
key_requested_count=1
OK.
NSS keys after re-keygen (preserve=0,pin="password"):
<-> rsa      hexhexhexhexhex   i2048 (candidate (next))
<-> rsa      originalhex   NSS Certificate DB:i2048
key_issued_count=0
key_next_requested_count=0
key_requested_count=1
(submit NSS)
key_issued_count=0
key_next_requested_count=1
key_requested_count=1
NSS certs before saving (preserve=0,pin="password"):
i2048                                                        u,u,u
serial=1234
NSS keys before saving (preserve=0,pin="password"):
<-> rsa      hexhexhexhexhex   i2048 (candidate (next))
<-> rsa      originalhex   NSS Certificate DB:i2048
NSS Signing:
NSS Verify:
This is the plaintext.
(saving)
key_issued_count=1
key_requested_count=1
NSS certs after saving (preserve=0,pin="password"):
i2048                                                        u,u,u
serial=1235
NSS keys after saving (preserve=0,pin="password"):
<-> rsa      hexhexhexhexhex   NSS Certificate DB:i2048
NSS Signing:
NSS Verify:
This is the plaintext.
PEM keys before re-keygen (preserve=0,pin="password"):
${tmpdir}/keyi2048
key_issued_count=0
key_requested_count=1
OK.
PEM keys after re-keygen (preserve=0,pin="password"):
${tmpdir}/keyi2048
${tmpdir}/keyi2048.(next).key
key_issued_count=0
key_next_requested_count=0
key_requested_count=1
(submit OpenSSL)
key_issued_count=0
key_next_requested_count=1
key_requested_count=1
PEM certs before saving (preserve=0,pin="password"):
${tmpdir}/certi2048
serial=1234
PEM keys before saving (preserve=0,pin="password"):
${tmpdir}/keyi2048
${tmpdir}/keyi2048.(next).key
OpenSSL Signing:
OpenSSL Verify:
This is the plaintext.
(saving)
key_issued_count=1
key_requested_count=1
PEM certs after saving (preserve=0,pin="password"):
${tmpdir}/certi2048
serial=1235
PEM keys after saving (preserve=0,pin="password"):
${tmpdir}/keyi2048
OpenSSL Signing:
OpenSSL Verify:
This is the plaintext.
[ End pass (preserve=0,pin="password"). ]
Test complete.
